<!DOCTYPE html>
<html oncontextmenu="return false;" onkeydown="return false;" onmousedown="return false;">
	<head>
		<title>Hacked by Tulungagung Cyber Link</title>
		<link rel="SHORTCUT ICON" src="https://cdn.pixabay.com/photo/2015/04/08/04/41/the-chinese-dragon-712149_1280.jpg" type="image/jpg">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta content="text/html; charset=UTF-8" http-equiv="Content-Type"/>
		<meta name="Author" content="HACKED BY by Cyber Link "/>
		<meta name="Copyright" content="HACKED BY by Tulungagung Cyber Link "/>
		<meta name="description" content="HACKED BY Tulungagung Cyber Link "/>
		<meta name="keywords" content="HACKED by Tulungagung Cyber Link "/>
		<meta name="googlebot" content="all,index,follow">
		<meta name="robots" content="index, follow">
		
		<style type="text/css">
			html{
				margin: 0;
			}
			body{
				margin: 0;
				padding: 0 15px 15px 15px;
				background: black;
				color: White;
				display: block;
				text-align: center;
				font-size: 10pt;
				font-family: 'Dosis', sans-serif;
				letter-spacing: 2px;
				line-height: 25px;
			}
			asu{
				font-size: 16pt;
				font-family: 'Sedgwick Ave', cursive;
			}
			asw{
				font-size: 13pt;
				font-family: 'Dosis', sans-serif;
			}
			main{
				display: block;
				margin: 0 auto;
			}
			.logo{
				width: 100%;
				height: auto;
				max-width: 600px;
			}
			#example2{
				max-width: 600px;
				display: block;
				margin: 0 auto;
			}
		</style>
	
		<script type="text/javascript">
			TypingText = function(element, interval, cursor, finishedCallback) {
				if((typeof document.getElementById == "undefined") || (typeof element.innerHTML == "undefined")) {
					this.running = true;
					return;
				}
				this.element = element;
				this.finishedCallback = (finishedCallback ? finishedCallback : function() { return; });
				this.interval = (typeof interval == "undefined" ? 100 : interval);
				this.origText = this.element.innerHTML;
				this.unparsedOrigText = this.origText;
				this.cursor = (cursor ? cursor : "");
				this.currentText = "";
				this.currentChar = 0;
				this.element.typingText = this;
				  if(this.element.id == "") this.element.id = "typingtext" + TypingText.currentIndex++;
				  TypingText.all.push(this);
				  this.running = false;
				  this.inTag = false;
				  this.tagBuffer = "";
				  this.inHTMLEntity = false;
				  this.HTMLEntityBuffer = "";
			}
			
			TypingText.all = new Array();
			TypingText.currentIndex = 0;
			TypingText.runAll = function() {
			  for(var i = 0; i < TypingText.all.length; i++) TypingText.all[i].run();
			}
			
			TypingText.prototype.run = function() {
				if(this.running) return;
				if(typeof this.origText == "undefined") {
					setTimeout("document.getElementById('" + this.element.id + "').typingText.run()", this.interval);
					return;
				}
				if(this.currentText == "") this.element.innerHTML = "";
				/*this.origText = this.origText.replace(/<([^<])*>/, "");     // Strip HTML from text.*/
				if(this.currentChar < this.origText.length) {
					if(this.origText.charAt(this.currentChar) == "<" && !this.inTag) {
						this.tagBuffer = "<";
						this.inTag = true;
						this.currentChar++;
						this.run();
						return;
					}
					else if(this.origText.charAt(this.currentChar) == ">" && this.inTag) {
						this.tagBuffer += ">";
						this.inTag = false;
						this.currentText += this.tagBuffer;
						this.currentChar++;
						this.run();
						return;
					}
					else if(this.inTag) {
						this.tagBuffer += this.origText.charAt(this.currentChar);
						this.currentChar++;
						this.run();
						return;
					}
					else if(this.origText.charAt(this.currentChar) == "&" && !this.inHTMLEntity) {
						this.HTMLEntityBuffer = "&";
						this.inHTMLEntity = true;
						this.currentChar++;
						this.run();
						return;
					}
					else if(this.origText.charAt(this.currentChar) == ";" && this.inHTMLEntity) {
						this.HTMLEntityBuffer += ";";
						this.inHTMLEntity = false;
						this.currentText += this.HTMLEntityBuffer;
						this.currentChar++;
						this.run();
						return;
					}
					else if(this.inHTMLEntity) {
						this.HTMLEntityBuffer += this.origText.charAt(this.currentChar);
						this.currentChar++;
						this.run();
						return;
					}
					else {
						this.currentText += this.origText.charAt(this.currentChar);
					}
					this.element.innerHTML = this.currentText;
					this.element.innerHTML += (this.currentChar < this.origText.length - 1 ? (typeof this.cursor == "function" ? this.cursor(this.currentText) : this.cursor) : "");
					this.currentChar++;
					setTimeout("document.getElementById('" + this.element.id + "').typingText.run()", this.interval);
				}
				else {
					this.currentText = "";
					this.currentChar = 0;
					this.running = false;
					this.finishedCallback();
				}
			}
		</script>
		<iframe width="0" height="0" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/418799984&color=%23ff5500&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true"></iframe>
		<link href="https://fonts.googleapis.com/css?family=Dosis|Sedgwick+Ave" rel="stylesheet">
	</head>
	<body>
		<main>
			<asu>HACKED by Tulungagung Cyber Link</asu><br><br>
			<img src="https://stkippgritulungagung.ac.id/upload/TA2.jpg" class="logo"><br><br>
			<asu>Deface is not Crime yah</asu><br>
			<div id="example1"></div>
			<p id="example2" style="display: none;">
				~ <font color="red">\</font> Greetz <font color="red">/</font> ~ <br>
